class Solution(object):
    def canPlaceFlowers(self, flowerbed, n):
        """
        :type flowerbed: List[int]
        :type n: int
        :rtype: bool
        """
        # Add padding of zeros to the flowerbed to handle edge cases
        flowerbed = [0] + flowerbed + [0]
        count = 0

        # Iterate through the flowerbed
        for i in range(1, len(flowerbed) - 1):
            # Check if the current, previous, and next plots are empty
            if flowerbed[i - 1] == 0 and flowerbed[i] == 0 and flowerbed[i + 1] == 0:
                flowerbed[i] = 1  # Plant a flower
                count += 1  # Increment the count of flowers placed
                
                # If we've placed enough flowers, return True early
                if count >= n:
                    return True
        
        # Check if the total number of flowers placed is enough
        return count >= n


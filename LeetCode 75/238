class Solution(object):
    def productExceptSelf(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        n = len(nums)
        result = [1] * n  # Initialize the output array with 1s

        # Step 1: Calculate prefix products
        prefix = 1
        for i in range(n):
            result[i] = prefix  # Store the product of elements to the left of index i
            prefix *= nums[i]  # Update the prefix product for the next index

        # Step 2: Calculate suffix products and multiply with prefix
        suffix = 1
        for i in range(n - 1, -1, -1):  # Iterate from the end of the array
            result[i] *= suffix  # Multiply the suffix product with the prefix product
            suffix *= nums[i]  # Update the suffix product for the next index

        return result


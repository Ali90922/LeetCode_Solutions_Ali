public class LongestConsecutiveSequence {
    public static int longestConsecutive(int[] nums) {
        if (nums.length == 0) {
            return 0;
        }

        Set<Integer> numSet = new HashSet<>();
        for (int num : nums) {
            numSet.add(num); // Step 1: Add all numbers to the set
        }

        int longestStreak = 0;

        for (int num : numSet) { // Step 2: Iterate through each number in the set
            // Step 3: Check if it's the start of a sequence
            if (!numSet.contains(num - 1)) { // Start of a new sequence
                int currentNum = num;
                int currentStreak = 1;

                // Step 3: Count the length of the sequence
                while (numSet.contains(currentNum + 1)) { // Increment while consecutive numbers exist
                    currentNum++;
                    currentStreak++;
                }

                // Step 4: Update the longest sequence found
                longestStreak = Math.max(longestStreak, currentStreak);
            }
        }

        return longestStreak; // Step 4: Return the length of the longest sequence
    }

    public static void main(String[] args) {
        int[] nums = {0, 3, 2, 5, 4, 6, 1, 1}; // Example input
        System.out.println("Longest consecutive sequence length: " + longestConsecutive(nums)); // Output: 7
    }
}


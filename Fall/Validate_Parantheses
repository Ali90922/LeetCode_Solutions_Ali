class Solution:
    def isValid(self, s: str) -> bool:
        # Stack to keep track of opening brackets
        stack = []
        # Hash map to keep mappings of closing to opening brackets
        bracket_map = {')': '(', ']': '[', '}': '{'}
        
        # Iterate over each character in the string
        for char in s:
            # If the character is a closing bracket
            if char in bracket_map:
                # Pop from stack if not empty; else assign a dummy value
                top_element = stack.pop() if stack else '#'
                
                # Check if the popped element matches the mapping
                if bracket_map[char] != top_element:
                    return False
            else:
                # It is an opening bracket, push onto stack
                stack.append(char)
        
        # If the stack is empty, all brackets were matched correctly
        return not stack

